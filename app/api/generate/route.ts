import { NextResponse } from 'next/server';
import OpenAI from 'openai';

// Sample fallback ideas for when the API is not available
const fallbackIdeas = [
  {
    name: "DreamDecode AI",
    tagline: "AI that turns your dreams into actionable business strategies.",
    tweet: "AI just created this startup for me: DreamDecode AI â€“ turns your dreams into actionable business strategies overnight. My subconscious is now my business partner! ðŸ’¤ðŸ’° Try it: vibeship.ai @VibeShipAI"
  },
  {
    name: "EchoLearn",
    tagline: "AI that learns your communication style and responds to emails for you.",
    tweet: "Just discovered EchoLearn â€“ AI that learns your communication style and handles all your emails. My inbox has never been emptier! Who's ready for inbox zero? ðŸ“¨âœ… Generated by @VibeShipAI â€“ Try it: vibeship.ai"
  },
  {
    name: "MemoryMesh",
    tagline: "AI that remembers everything you've ever read and recalls it when you need it.",
    tweet: "AI just built this for me: MemoryMesh â€“ never forget anything you've read again. It's like having a photographic memory on demand! ðŸ§ ðŸ“š Who's investing? Generated by @VibeShipAI â€“ Try it: vibeship.ai"
  },
  {
    name: "NutrientNinja",
    tagline: "AI that scans your fridge and creates perfect meal plans based on what you have.",
    tweet: "Just generated NutrientNinja with AI â€“ it scans my fridge and creates perfect meal plans with what I already have. No more food waste or grocery confusion! ðŸ¥—ðŸ¤– Try it yourself: vibeship.ai @VibeShipAI"
  },
  {
    name: "CodeWhisperer",
    tagline: "AI that turns your voice descriptions into production-ready code.",
    tweet: "This AI startup idea is wild: CodeWhisperer â€“ just describe what you want built and it generates production-ready code instantly. Could put us all out of jobs! ðŸ˜…ðŸ’» Generated by @VibeShipAI â€“ Try it: vibeship.ai"
  }
];

// Initialize the OpenAI client with the API key from environment variables if available
let openai: OpenAI | null = null;
try {
  if (process.env.OPENAI_API_KEY) {
    openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY,
    });
  } else {
    console.warn("OPENAI_API_KEY is not set. Using fallback ideas instead.");
  }
} catch (error) {
  console.error("Error initializing OpenAI client:", error);
}

// Add export for GET method to handle preflight requests
export async function GET() {
  return NextResponse.json({ message: "API is working. Use POST to generate a startup idea." });
}

export async function POST(request: Request) {
  console.log("API route called with POST method");
  
  // If OpenAI client is not initialized, return a fallback idea
  if (!openai) {
    console.log("Using fallback idea due to missing OpenAI API key");
    const randomIndex = Math.floor(Math.random() * fallbackIdeas.length);
    return NextResponse.json(fallbackIdeas[randomIndex]);
  }
  
  try {
    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: `You are an expert AI designed to generate viral AI startup ideas for social media engagement. 
          Your task is to create creative, compelling, and Twitter-ready startup ideas that users can instantly share.
          The ideas should be simple, catchy, and intriguing enough to encourage discussion.
          
          IMPORTANT: Each time you are called, generate a COMPLETELY DIFFERENT and UNIQUE startup idea. 
          Never repeat previous ideas. Be extremely creative and innovative.`
        },
        {
          role: "user",
          content: `Generate a BRAND NEW AI-powered startup idea with:
          1. A short, brandable, and creative name (e.g., "SynthSync AI").
          2. A one-sentence pitch explaining what the AI startup does (e.g., "AI that books meetings before you even know you need them.").
          3. A Twitter-ready text that includes the startup name, tagline, and a call-to-action.
          
          Format your response as a JSON object with the following structure:
          {
            "name": "Startup Name",
            "tagline": "One-sentence pitch",
            "tweet": "Pre-written tweet text that includes the name, tagline, and mentions @VibeShipAI and vibeship.ai"
          }
          
          Constraints:  
          - Keep the tweet under 280 characters.  
          - Use an engaging, casual, and thought-provoking tone.  
          - Avoid technical jargonâ€”make it simple and easy to grasp at a glance.
          - Make sure the idea is COMPLETELY DIFFERENT from common ideas like dream interpretation, email management, or content creation.`
        }
      ],
      response_format: { type: "json_object" },
      temperature: 1.0,
    });

    // Parse the JSON response
    const content = response.choices[0]?.message?.content;
    if (!content) {
      console.error("No content in OpenAI response");
      const randomIndex = Math.floor(Math.random() * fallbackIdeas.length);
      return NextResponse.json(fallbackIdeas[randomIndex]);
    }

    const parsedContent = JSON.parse(content);
    console.log("Generated startup idea:", parsedContent);
    
    return NextResponse.json(parsedContent);
  } catch (error) {
    console.error("Error generating startup idea:", error);
    // Return a fallback idea if the API call fails
    const randomIndex = Math.floor(Math.random() * fallbackIdeas.length);
    return NextResponse.json(fallbackIdeas[randomIndex]);
  }
} 